## Policies in all of autoshift need unique names
{{ $policyName := "INSERT_POLICY_NAME" }}
## Configuration Policies in all of autoshift need unique names
{{ $configPolicyName :=  "INSERT_CONFIG_POLICY_NAME" }}
## Label Prefix is currently autoshift.io/ for all labels created by this repo
{{ $labelPrefix := "autoshift.io/" }}
## Placement also needs a unique name, usually use policy name to enforce this
{{ $placementName := printf "placement-%s" $policyName }}
apiVersion: policy.open-cluster-management.io/v1
kind: Policy
metadata:
  name: {{ $policyName }}
  ## Namespace is set for each autoshift deployment and overrides this value
  namespace: {{ .Values.policy_namespace }}
  annotations:
    policy.open-cluster-management.io/categories: CM Configuration Management
    policy.open-cluster-management.io/controls: CM-2 Baseline Configuration
    policy.open-cluster-management.io/standards: NIST SP 800-53
spec:
  disabled: false
  ## If you want your policy to wait for another policy to complete successfully before kicking off this policy
  ## dependencies:
  ##   - name: NAME_OF_DEPENDENCY
  ##     namespace: {{ .Values.policy_namespace }}
  ##     apiVersion: policy.open-cluster-management.io/v1
  ##     compliance: Compliant
  ##     kind: Policy
  policy-templates:
    - objectDefinition:
        apiVersion: policy.open-cluster-management.io/v1
        kind: ConfigurationPolicy
        metadata:
          name: {{ $configPolicyName }}
        spec:
          ## use object-templates-raw: | or object-templates: depending if you want to use gotemplates outside of valid yaml
          object-templates:
              ## Example template syntax:
              ## {{ "{{-" }} This syntax works well if you need a {{ .Values.from_helm_chart }} in the middle {{ "-}}" }}
              ## {{`{{-- This is a good syntax for policy only and not using helm syntax at all }}`}}
              ## {{`{{hub- grab something from the hub or pull the value a label hub}}`}}
              ## object is a list so you can have multiple objects if they all share the same remediationAction.
              ## Or you can split up yaml by configuration policy if you want them to fail independently
              - complianceType: musthave
                objectDefinition:
                  ## what yaml do you want to apply. Note you do not need to define the whole yaml unless complianceType is mustonlyhave.
                  apiVersion: test.io/v1
                  kind: test
                  metadata:
                    name: test
                    namespace: test
                  spec: {}
          ## How you would like the policy to remove its objects when deleted
          pruneObjectBehavior: None
          ## Use enforce to apply a change, or inform for a test!
          remediationAction: enforce
          severity: high
---
## Everything uses one policy per placement per placementbinding for simplicity 
apiVersion: cluster.open-cluster-management.io/v1beta1
kind: Placement
metadata:
  name: {{ $placementName }}
  namespace: {{ .Values.policy_namespace }}
spec:
## Use any combination of managed or hub that makes sense. Most policies will apply to either as long as label selector is satisfied.
  clusterSets:
  {{- range $clusterSet, $value := .Values.managedClusterSets }}
    - {{ $clusterSet }}
  {{- end }}
  {{- range $clusterSet, $value := .Values.hubClusterSets }}
    - {{ $clusterSet }}
  {{- end }}
  predicates:
    ## Label selectors are key to what clusters will have this policy's functionality
    - requiredClusterSelector:
        labelSelector:
          matchExpressions:
            - key: {{ printf "%s%s" $labelPrefix "component-name" }}
              operator: In
              values:
              - 'true'
  tolerations:
    - key: cluster.open-cluster-management.io/unreachable
      operator: Exists
    - key: cluster.open-cluster-management.io/unavailable
      operator: Exists
---
apiVersion: policy.open-cluster-management.io/v1
kind: PlacementBinding
metadata:
  name: {{ $placementName }}
  namespace: {{ .Values.policy_namespace }}
placementRef:
  name: {{ $placementName }}
  apiGroup: cluster.open-cluster-management.io
  kind: Placement
subjects:
  - name: {{ $policyName }}
    apiGroup: policy.open-cluster-management.io
    kind: Policy
