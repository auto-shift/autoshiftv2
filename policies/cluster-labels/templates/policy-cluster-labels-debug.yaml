{{ if (.Values.debug | default false) }}
{{ range $clusterSetKey, $clusterSetValue := $.Values.hubClusterSets }}
{{ $hubClusterSet := $.Values.hubClusterSet | default "hub" }}
{{ $policyName := printf "policy-%s-cluster-labels-debug" $clusterSetKey }}
{{ $configPolicyName := printf "cluster-labels-%s-debug" $clusterSetKey }}
{{ $placementName := printf "placement-%s" $policyName }}
apiVersion: policy.open-cluster-management.io/v1
kind: Policy
metadata:
  name: {{ $policyName }}
  namespace: {{ $.Values.policy_namespace }}
  annotations:
    policy.open-cluster-management.io/categories: CM Configuration Management
    policy.open-cluster-management.io/controls: CM-2 Baseline Configuration
    policy.open-cluster-management.io/standards: NIST SP 800-53
spec:
  disabled: false
  remediationAction: enforce
  hubTemplateOptions:
    serviceAccountName: autoshift-policy-service-account
  policy-templates:
    - objectDefinition:
        apiVersion: policy.open-cluster-management.io/v1
        kind: ConfigurationPolicy
        metadata:
          name: {{ $configPolicyName }}
        spec:
          object-templates:
            - complianceType: mustonlyhave 
              objectDefinition: 
                apiVersion: v1 
                kind: ConfigMap
                metadata:
                  name: cluster-set-{{ $clusterSetKey }}-lookup-debug
                  namespace: {{ $.Values.policy_namespace }}
                data:
                  lookupResult: |
                    test
                    {{ "{{-" }} /* Specify the parameters needed to create the MachineSet  */ {{ "-}}" }}
                    {{ "{{-" }} $machineset_role := "worker" {{ "}}" }}
                    {{ "{{-" }} $zones_from_labels := list {{ "{{hub" }} range $label, $labelvalue := .ManagedClusterLabels {{ "hub}}" }}{{ "{{hub" }} if $label | hasPrefix "autoshift.io/worker-nodes-zone" {{ "hub}}" }}"{{ "{{hub" }} $labelvalue {{ "hub}}" }}"{{ "{{hub" }} end {{ "hub}}" }}{{ "{{hub" }} end {{ "hub}}" }} {{ "}}" }}
                    {{ "{{-" }} $infrastructure_id := (lookup "config.openshift.io/v1" "Infrastructure" "" "cluster").status.infrastructureName {{ "}}" }}
                    {{ "{{-" }} $worker_ms := (index (lookup "machine.openshift.io/v1beta1" "MachineSet" "openshift-machine-api" "").items 0) {{ "}}" }}
                    {{ "{{-" }} /* Generate the MachineSet for each zone as specified or default to worker az */ {{ "-}}" }}
                    {{ "{{-" }} range $zone := ternary (list $worker_ms.spec.template.spec.providerSpec.value.placement.availabilityZone ) $zones_from_labels (eq 0 (len $zones_from_labels)) {{ "}}" }}
                    - complianceType: musthave
                      objectDefinition:
                        apiVersion: machine.openshift.io/v1beta1
                        kind: MachineHealthCheck
                        metadata:
                          name: worker-machine-health-check
                          namespace: openshift-machine-api
                        spec:
                          selector:
                            matchLabels:
                              machine.openshift.io/cluster-api-machine-role: {{ "{{" }} $machineset_role {{ "}}" }}
                              machine.openshift.io/cluster-api-machine-type: {{ "{{" }} $machineset_role {{ "}}" }}
                              machine.openshift.io/cluster-api-machineset: {{ "{{" }} $infrastructure_id {{ "}}" }}-{{ "{{" }} $machineset_role {{ "}}" }}-{{ "{{" }} $zone {{ "}}" }}
                          unhealthyConditions:
                          - type:    "Ready"
                            timeout: "300s"
                            status: "False"
                          - type:    "Ready"
                            timeout: "300s"
                            status: "Unknown"
                          maxUnhealthy: "40%"
                          nodeStartupTimeout: "10m"
                    {{ "{{-" }} end {{ "}}" }}
---
{{/* (index ((index (lookup "v1" "ConfigMap" "{{ .Values.policy_namespace }}" (printf "cluster-set.%s"  $clusterSet)) "data" "values") | fromJson) "labels") | default dict */}}
                    {{/*{{ "{{-" }} (lookup "cluster.open-cluster-management.io/v1" "ManagedCluster" "" "") | toRawJson {{ "}}" }} */}}
apiVersion: cluster.open-cluster-management.io/v1beta1
kind: Placement
metadata:
  name: {{ $placementName }}
  namespace: {{ $.Values.policy_namespace }}
spec:
  clusterSets:
  {{ range $cluster, $value := $.Values.hubClusterSets }}
    - {{ $cluster }}
  {{ end }}
  tolerations:
    - key: cluster.open-cluster-management.io/unreachable
      operator: Exists
    - key: cluster.open-cluster-management.io/unavailable
      operator: Exists
---
apiVersion: policy.open-cluster-management.io/v1
kind: PlacementBinding
metadata:
  name: {{ $placementName}}
  namespace: {{ $.Values.policy_namespace }}
placementRef:
  name: {{ $placementName}}
  apiGroup: cluster.open-cluster-management.io
  kind: Placement
subjects:
  - name: {{ $policyName }}
    apiGroup: policy.open-cluster-management.io
    kind: Policy
---
{{ end }}
{{ end }}
{{/*                  lookupManagedClusters: |
                    {{ "{{" }}  (lookup "cluster.open-cluster-management.io/v1" "ManagedCluster" "" "") | toRawJson {{ "}}" }}
                  lookupClusterSets: | 
                {{ "{{" }} range $index, $value := (lookup "cluster.open-cluster-management.io/v1" "ManagedCluster" "" "").items {{ "}}" }}
                    iteration: {{ "{{" }} $index {{ "}}" }}
                  {{ "{{" }} $clusterSet := ((index $value.metadata.labels "cluster.open-cluster-management.io/clusterset") | default "") {{ "}}" }}
                    {{ "{{" }} printf "cluster-set.%s" $clusterSet {{ "}}" }}
                  lookupClusterSetLabels: |
                  {{ "{{/*" }} $clusterSetLabels := ((lookup "v1" "ConfigMap" "{{ .Values.policy_namespace }}" (printf "cluster-set.%s"  $clusterSet).data.values) | default "" | fromJson).labels | default dict {{ "}}" }}
                    {{ "{{" }} $clusterSetLabels := (index ((index (lookup "v1" "ConfigMap" "{{ .Values.policy_namespace }}" (printf "cluster-set.%s"  $clusterSet)) "data" "values") | default "" | fromJson) "labels") | default dict {{ "}}" }}
                    {{ "{{" }} $clusterSetLabels {{ "}}" }}
                    {{ "{{/*" }} $clusterSet | trim {{ "}}" }}Labels: {{ "{{" }} $clusterSet | trim {{ "}}" }}
                  lookupClusterLabels: |
                    Cluster: {{ "{{" }}  $value.metadata.name {{ "}}" }}
                    {{ "{{" }} $clusterLabels := (index ((index (lookup "v1" "ConfigMap" "{{ .Values.policy_namespace }}" (printf "managed-cluster.%s"  $value.metadata.name)) "data" "values") | default "" | fromJson) "labels") | default dict {{ "}}" }}
                    {{ "{{" }} $clusterLabels {{ "}}" }}
                  resultantSetOfLabels: | 
                    {{ "{{" }} $resultantLabels := merge $clusterLabels $clusterSetLabels {{ "}}" }}
                    {{ "{{" }} $resultantLabels {{ "}}" }}
                  formattedLabels: |
                  {{ "{{" }} range $label, $value := $resultantLabels {{ "}}" }}
                    {{ "{{" }} $label {{ "}}" }}: {{ "{{" }} $value | quote {{ "-}}" }} 
                  {{ "{{" }} end {{ "}}" }}
                {{ "{{" }} end {{ "}}" }}
*/}}
{{/*                  ClusterDefinition: | 
                              [
                                {{ "{{-" }} $clusters := (lookup "cluster.open-cluster-management.io/v1" "ManagedCluster" "" "").items {{ "}}" }}
                                {{ "{{-" }} $lastIndex := sub (len $clusters) 1 {{ "}}" }}
                                {{ "{{-" }} range $index, $value := $clusters {{ "}}" }}
                                  {{ "{{-" }} $newLabels := dict {{ "}}" }}
                                  {{ "{{-" }} $managedCluster := $value.metadata.name {{ "}}" }}
                                  {{ "{{-" }} $existingClusterLabels := $value.metadata.labels {{ "}}" }}
                                  {{ "{{-" }} range $existingKey, $existingValue := $existingClusterLabels {{ "}}" }}
                                    {{ "{{-" }} if ($existingKey | hasPrefix "{{ $.Values.autoshiftLabelPrefix }}") {{ "}}" }}
                                      {{ "{{-" }} $_ := unset $existingClusterLabels $existingKey {{ "}}" }}
                                    {{ "{{-" }} end {{ "}}" }}
                                  {{ "{{-" }} end {{ "}}" }}
                                  {{ "{{-" }} $clusterSet := ((index $value.metadata.labels "cluster.open-cluster-management.io/clusterset") | default "") {{ "}}" }}
                                  {{ "{{-" }} $clusterSetLabels := (index ((index (lookup "v1" "ConfigMap" "{{ .Values.policy_namespace }}" (printf "cluster-set.%s"  $clusterSet)) "data" "values") | default "" | fromJson) "labels") | default dict {{ "}}" }}
                                  {{ "{{-" }} $clusterLabels := (index ((index (lookup "v1" "ConfigMap" "{{ .Values.policy_namespace }}" (printf "managed-cluster.%s"  $value.metadata.name)) "data" "values") | default "" | fromJson) "labels") | default dict {{ "}}" }}
                                  {{ "{{-" }} $configMapLabels := merge $clusterLabels $clusterSetLabels {{ "}}" }}
                                  {{ "{{-" }} $labels := merge $clusterLabels $clusterSetLabels $existingClusterLabels {{ "}}" }} 
                                  {{ "{{-" }} range $label, $labelValue := $labels {{ "}}" }}
                                    {{ "{{-" }} if not (and ($label | hasPrefix "{{ $.Values.autoshiftLabelPrefix }}") (eq $labelValue "_")) {{ "}}" }}
                                      {{ "{{-" }} $label {{ "}}" }}: {{ "{{" }} $labelValue {{ "}}" }}
                                      {{ "{{-" }} $_ := set $newLabels $label $labelValue {{ "}}" }}
                                    {{ "{{-" }} end {{ "}}" }}
                                  {{ "{{-" }} end {{ "}}" }}
                                  {{ "{{-" }} $metadata := set $value.metadata "labels" $newLabels {{ "}}" }}
                                  {{ "{{-" }} $objectDefinition := set $value "metadata" $metadata {{ "}}" }}
                                  {{ "{{-" }} $_ := unset $objectDefinition "status" {{ "}}" }}
                                {
                                  "complianceType": "mustonlyhave",
                                  "objectDefinition": {{ "{{" }} $objectDefinition | toRawJson  {{ "}}" }}
                                }{{ "{{" }} if ne $lastIndex $index {{ "}}" }},{{ "{{" }} end {{ "}}" }}
                                {{ "{{" }} end {{ "}}" }}
                              ]
*/}}